{"ast":null,"code":"var _jsxFileName = \"/Users/geraldalanraja/Desktop/DocBook/DocBook/frontend/src/pages/BookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/bookAppointment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookAppointment = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    dentist\n  } = location.state || {};\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('10:00AM – 11:00AM');\n  const [age, setAge] = useState('');\n  const [symptoms, setSymptoms] = useState('');\n  if (!dentist) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No dentist selected. Please go back and select one.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle appointment confirmation\n  const handleConfirm = () => {\n    // Checking if all fields are filled\n    if (!date || !time || !age) {\n      alert('Please fill all required fields!');\n      return;\n    }\n    const appointment = {\n      dentist,\n      date,\n      time,\n      age,\n      symptoms\n    };\n\n    // Get existing appointments from localStorage or create an empty array\n    const existing = JSON.parse(localStorage.getItem('appointments')) || [];\n\n    // Push new appointment data to the existing array\n    existing.push(appointment);\n\n    // Set the updated appointments array back into localStorage\n    localStorage.setItem('appointments', JSON.stringify(existing));\n\n    // Navigate to the appointment confirmation page\n    navigate('/appointment-confirmation');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"appointment-title\",\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: dentist.image,\n        alt: dentist.name,\n        className: \"doctor-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: dentist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dentist.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Appointment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Time Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: time,\n        onChange: e => setTime(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: age,\n        onChange: e => setAge(e.target.value),\n        placeholder: \"Enter patient's age\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Symptoms (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value),\n        placeholder: \"Describe symptoms (optional)\",\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"confirm-btn\",\n        onClick: handleConfirm,\n        children: \"Confirm Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(BookAppointment, \"0MH1qzJLKu3cuPzP+pOn/fes1bw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","BookAppointment","_s","location","navigate","dentist","state","date","setDate","time","setTime","age","setAge","symptoms","setSymptoms","children","fileName","_jsxFileName","lineNumber","columnNumber","handleConfirm","alert","appointment","existing","JSON","parse","localStorage","getItem","push","setItem","stringify","className","src","image","alt","name","category","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/geraldalanraja/Desktop/DocBook/DocBook/frontend/src/pages/BookAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/bookAppointment.css';\n\nconst BookAppointment = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { dentist } = location.state || {};\n\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('10:00AM – 11:00AM');\n  const [age, setAge] = useState('');\n  const [symptoms, setSymptoms] = useState('');\n\n  if (!dentist) {\n    return <p>No dentist selected. Please go back and select one.</p>;\n  }\n\n  // Handle appointment confirmation\n  const handleConfirm = () => {\n    // Checking if all fields are filled\n    if (!date || !time || !age) {\n      alert('Please fill all required fields!');\n      return;\n    }\n\n    const appointment = {\n      dentist,\n      date,\n      time,\n      age,\n      symptoms,\n    };\n\n    // Get existing appointments from localStorage or create an empty array\n    const existing = JSON.parse(localStorage.getItem('appointments')) || [];\n\n    // Push new appointment data to the existing array\n    existing.push(appointment);\n\n    // Set the updated appointments array back into localStorage\n    localStorage.setItem('appointments', JSON.stringify(existing));\n\n    // Navigate to the appointment confirmation page\n    navigate('/appointment-confirmation');\n  };\n\n  return (\n    <div className=\"appointment-container\">\n      <h1 className=\"appointment-title\">Book Appointment</h1>\n\n      {/* Dentist Information Card */}\n      <div className=\"doctor-card\">\n        <img src={dentist.image} alt={dentist.name} className=\"doctor-img\" />\n        <div className=\"doctor-info\">\n          <h2>{dentist.name}</h2>\n          <p>{dentist.category}</p>\n        </div>\n      </div>\n\n      {/* Appointment Form */}\n      <div className=\"appointment-form\">\n        <h3>Appointment Details</h3>\n\n        <label>Select Date</label>\n        <input\n          type=\"date\"\n          value={date}\n          onChange={(e) => setDate(e.target.value)}\n          className=\"input-field\"\n        />\n\n        <label>Select Time Slot</label>\n        <input\n          type=\"text\"\n          value={time}\n          onChange={(e) => setTime(e.target.value)}\n          className=\"input-field\"\n        />\n\n        <label>Age</label>\n        <input\n          type=\"number\"\n          value={age}\n          onChange={(e) => setAge(e.target.value)}\n          placeholder=\"Enter patient's age\"\n          className=\"input-field\"\n        />\n\n        <label>Symptoms (Optional)</label>\n        <textarea\n          value={symptoms}\n          onChange={(e) => setSymptoms(e.target.value)}\n          placeholder=\"Describe symptoms (optional)\"\n          className=\"input-field\"\n        />\n\n        <button className=\"confirm-btn\" onClick={handleConfirm}>\n          Confirm Appointment\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookAppointment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}